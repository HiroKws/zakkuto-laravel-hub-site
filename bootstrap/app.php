<?php

/*
|--------------------------------------------------------------------------
| アプリケーション生成
|--------------------------------------------------------------------------
|
| 最初に行うことは、Laravelの全コンポーネントを「糊」のように
| まとめ、様々なパーツをシステムに全部結合させるIoCコンテナと
| して動作する、アプリケーションインスタンスを新規に作成します。
|
*/

$app = new Illuminate\Foundation\Application(
    realpath(__DIR__.'/../')
);

/*
|--------------------------------------------------------------------------
| 重要なインターフェイスの結合
|--------------------------------------------------------------------------
|
| 次に、重要なインターフェイスを必要なときに依存解決できるように、
| コンテナへ結合する必要があります。アプリケーションにやってきた、
| WebとCLIの両方からのリクエストに対し、カーネルは動作します。
|
*/

$app->singleton(
    Illuminate\Contracts\Http\Kernel::class,
    App\Http\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Console\Kernel::class,
    App\Console\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Debug\ExceptionHandler::class,
    App\Exceptions\Handler::class
);

/*
|--------------------------------------------------------------------------
| アプリケーションを返す
|--------------------------------------------------------------------------
|
| このスクリプトはアプリケーションインスタンスを返します。インスタンスは、
| 実際のアプリケーションの実行とレスポンス送信から、インスタンスの
| 構築を分離できるように、呼び出し元のスクリプトへ与えられます。
|
*/

return $app;
